<!--Documentation: http://msdn.microsoft.com/en-us/library/ff660914%28v=pandp.20%29.aspx -->
<!--
  ** Description:
  **   Unity configuration to wire up components provided by crds-web-common
  **
  ** NOTE:
  **   This Unity configuration comes from the crds-web-common package.  It will be overwritten when
  **   consuming new versions of that package, so consumers should not make changes to this file directly.
  **
  ** Usage: 
  **   Add the following in your web.config or app.config to get the components declared here added to your
  **   app's Unity container (assuming you have already configured a Unity container).
  **     <configSections>
  **       ...
  **       <section name="crossroadsCommonUnity" type="Microsoft.Practices.Unity.Configuration.UnityConfigurationSection, Microsoft.Practices.Unity.Configuration" />
  **       ...
  **     </configSections>
  **
  **     <crossroadsCommonUnity configSource="Crossroads.Web.Common-Unity.config" />
  -->
<crossroadsCommonUnity xmlns="http://schemas.microsoft.com/practices/2010/unity">
  <assembly name="Crossroads.Web.Common" />
  <assembly name="System.Runtime" />
  <assembly name="RestSharp" />
  <assembly name="Microsoft.Practices.Unity.Interception" />
  <assembly name="Microsoft.Practices.Unity.Interception.Configuration" />

  <!-- ========================================================================= -->
  <!-- Unity IoC Container Extensions -->

  <!-- Add Interception extension, allows configuration of AOP weaving -->
  <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension" />

  <container>
    <extension type="Interception" />
    
    <!-- Configuration Wrapper - one per container -->
    <register type="Crossroads.Web.Common.Configuration.IConfigurationWrapper" mapTo="Crossroads.Web.Common.Configuration.ConfigurationWrapper">
      <lifetime type="ContainerControlledLifetimeManager"/>
      <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor" />
      <interceptionBehavior type="Crossroads.Web.Common.Configuration.MpConfigValueCachingBehavior" />
    </register>

    <!-- ========================================================================= -->
    <!-- Repositories -->
    
    <!-- API User Repository - gets an access token for the "API User" -->
    <register type="Crossroads.Web.Common.MinistryPlatform.IApiUserRepository" mapTo="Crossroads.Web.Common.MinistryPlatform.ApiUserRepository">
      <lifetime type="ContainerControlledLifetimeManager"/>
      <constructor>
        <param name="configurationWrapper" />
        <param name="authenticationService" />
        <param name="ministryPlatformRestClient">
          <dependency name="ministryPlatformRestClient" />
        </param>
      </constructor>
    </register>

    <!-- Authentication Repository - used for login, refresh, password change, and logged-in user info -->
    <register type="Crossroads.Web.Common.Security.IAuthenticationRepository" mapTo="Crossroads.Web.Common.Security.AuthenticationRepository">
      <lifetime type="ContainerControlledLifetimeManager"/>
      <constructor>
        <param name="authenticationRestClient">
          <dependency name="authenticationRestClient"/>
        </param>
        <param name="ministryPlatformRestClient">
          <dependency name="ministryPlatformRestClient"/>
        </param>
      </constructor>
    </register>

    <!-- MinistryPlatform REST Repository - provides various CRUD operations using the MP REST services -->
    <register type="Crossroads.Web.Common.MinistryPlatform.IMinistryPlatformRestRepository" mapTo="Crossroads.Web.Common.MinistryPlatform.MinistryPlatformRestRepository">
      <lifetime type="ContainerControlledLifetimeManager"/>
      <constructor>
        <param name="ministryPlatformRestClient">
          <dependency name="ministryPlatformRestClient"/>
        </param>
        <param name="authenticationRestClient">
          <dependency name="authenticationRestClient"/>
        </param>
      </constructor>
    </register>

    <!-- ========================================================================= -->
    <!-- RESTSharp REST clients -->
    
    <!-- OAuth REST client -->
    <register name="authenticationRestClient" type="RestSharp.IRestClient" mapTo="RestSharp.RestClient">
      <lifetime type="ContainerControlledLifetimeManager"/>
      <constructor>
        <param name="baseUrl" type="string">
          <value value="MP_OAUTH_BASE_URL" typeConverter="Crossroads.Web.Common.Configuration.EnvironmentVariableTypeConverter" />
        </param>
      </constructor>
    </register>

    <!-- MinistryPlatform REST client -->
    <register name="ministryPlatformRestClient" type="RestSharp.IRestClient" mapTo="RestSharp.RestClient">
      <lifetime type="ContainerControlledLifetimeManager"/>
      <constructor>
        <param name="baseUrl" type="string">
          <value value="MP_REST_API_ENDPOINT" typeConverter="Crossroads.Web.Common.Configuration.EnvironmentVariableTypeConverter" />
        </param>
      </constructor>
    </register>

  </container>
</crossroadsCommonUnity>
